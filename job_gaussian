#!/bin/bash

## Dos numerales para comentar.
## Un numeral para pasarle parametros a SLURM

#SBATCH --nodelist=mini5
#SBATCH --nodes=1
#SBATCH --ntasks=8 
#SBATCH --ntasks-per-node=8
#SBATCH --partition=mini
#SBATCH --time=3-00:00:00
#SBATCH -J lc_defpp

#for i in opt*.gjf; do
JOBNAME=test1_sp.gjf


#
# . Declare the necessary environment
#
export g09root=/scratch/msosa/Gaussian
source /scratch/msosa/Gaussian/g09/bsd/g09.profile

# . Prepare scratch dir
#
# . dateString is used to name the scratch dir uniquely, and avoid overwritting in automatic resubmissions
dateString=`date +%s`
#
export GAUSS_SCRDIR=/scratch/$SLURM_JOB_USER/G09_scratch/tmp.${JOBNAME}.${dateString}/
#export GAUSS_SCRDIR=/scratch/$SLURM_JOB_USER/G09_scratch/tmp.$SLURM_JOBID.$dateString/
mkdir $GAUSS_SCRDIR

# . Copy files to compute
# Note: SLURM defaults to running jobs in the directory
# where they are submitted, no need for $SLURM_SUBMIT_DIR 
cd $SLURM_SUBMIT_DIR/
cp $JOBNAME    $GAUSS_SCRDIR
cp chkfile.chk $GAUSS_SCRDIR

# . Backup old output if there is one
if [ -f $JOBNAME.out ] ; then cp -aR $JOBNAME.out $JOBNAME.out.bak ; fi
   
cd $GAUSS_SCRDIR

# . Run
#g09 < $JOBNAME > $JOBNAME.out
g09 < $JOBNAME > $SLURM_SUBMIT_DIR/$JOBNAME.out

# . Copy files back 
mv chkfile.chk $SLURM_SUBMIT_DIR/$JOBNAME.chk
mv $JOBNAME.*  $SLURM_SUBMIT_DIR/

cd $SLURM_SUBMIT_DIR/

rm -r $GAUSS_SCRDIR

#done
